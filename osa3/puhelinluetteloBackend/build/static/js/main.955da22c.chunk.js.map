{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","put","concat","delete","Notification","_ref","message","react_default","a","createElement","className","_ref2","Persons","persons","filter","handleDelete","map","person","key","name","number","onClick","results","toLowerCase","includes","result","Filter","search","handler","value","onChange","PersonForm","props","onSubmit","newName","nameChange","newNumber","numberChange","type","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNumber","_useState7","_useState8","newSearch","setSearch","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","setMessage","useEffect","personService","App_Filter","event","target","App_PersonForm","preventDefault","personObj","window","confirm","oldObj","console","log","returnedObj","setTimeout","catch","error","p","returnedPerson","App_Persons","deleted","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.955da22c.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons/'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteRow = (id) => {\r\n  const request = axios.delete(`${baseUrl}${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll,\r\n  create, \r\n  update,\r\n  deleteRow\r\n}","import React from 'react'\r\n\r\n\r\nconst error = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const success = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default{\r\n    error,\r\n    success\r\n  }","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport notification from './components/Notification'\r\nimport './index.css'\r\n\r\nconst Persons = ({ persons, filter, handleDelete }) => {\r\n    if (filter === '') {\r\n        return (\r\n            <div>\r\n                {persons.map(person =>\r\n                    <div key={person.name}>{person.name} {person.number}\r\n                        <button onClick={() => handleDelete(person)}>delete</button>\r\n                    </div>)}\r\n            </div>\r\n        )\r\n    } else {\r\n        const results = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n        return (\r\n            <div>\r\n                {results.map(result =>\r\n                    <div key={result.name}>{result.name} {result.number}\r\n                        <button onClick={() => handleDelete(result)}>delete</button>\r\n                    </div>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst Filter = ({ search, handler }) =>\r\n    <div> filter show with <input value={search} onChange={handler} /> </div>\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handler}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.nameChange} />\r\n            </div>\r\n            <div>number: <input value={props.newNumber} onChange={props.numberChange} /></div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([\r\n    ])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNumber] = useState('')\r\n    const [newSearch, setSearch] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const handleNameChange = (event) => setNewName(event.target.value)\r\n    const handleNumberChange = (event) => setNumber(event.target.value)\r\n    const handleSearch = (event) => setSearch(event.target.value)\r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(persons => {\r\n                setPersons(persons)\r\n            })\r\n    }, [])\r\n\r\n    \r\n\r\n    const deletePerson = person => {\r\n        if (window.confirm(\"Are you sure you want to delete person?\"))\r\n            personService\r\n                .deleteRow(person.id)\r\n                .then(deleted => {\r\n                    setPersons(persons.filter(p => p.id !== person.id))\r\n                    setMessage(\r\n                        `${person.name} deleted`\r\n                      )\r\n                      setTimeout(() => {\r\n                        setMessage(null)\r\n                      }, 5000)\r\n                })\r\n                .catch(error => {\r\n                    setErrorMessage(\r\n                        `information of ${person.name} has already been removed from server`\r\n                      )\r\n                      setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                      }, 5000)\r\n                    setPersons(persons.filter(p => p.id !== person.id))\r\n                })\r\n    }\r\n\r\n\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        const personObj = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n        let names = persons.map((person) => person.name)\r\n\r\n        if (names.includes(personObj.name)) {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n                const oldObj = persons.filter(person => { return person.name === personObj.name})[0]\r\n                console.log(oldObj.id)\r\n                personService\r\n                    .update(oldObj.id, personObj)\r\n                    .then(returnedObj => {\r\n                    setPersons(persons.map(person => person.id !== oldObj.id ? person : returnedObj))\r\n                    setMessage(\r\n                        `${oldObj.name} updated`\r\n                      )\r\n                      setTimeout(() => {\r\n                        setMessage(null)\r\n                      }, 5000)\r\n                })\r\n                    .catch(error => {\r\n                        setErrorMessage(\r\n                            `information of ${oldObj.name} has already been removed from server`\r\n                          )\r\n                          setTimeout(() => {\r\n                            setErrorMessage(null)\r\n                          }, 5000)\r\n                        setPersons(persons.filter(p => p.id !== oldObj.id))\r\n                    })\r\n            }\r\n        } else {\r\n            personService\r\n                .create(personObj)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.concat(returnedPerson))\r\n                    setNewName('')\r\n                    setNumber('')\r\n                    setMessage(\r\n                        `Added ${returnedPerson.name}`\r\n                      )\r\n                      setTimeout(() => {\r\n                        setMessage(null)\r\n                      }, 5000)\r\n                })\r\n                .catch(error => {\r\n                    setErrorMessage(error.response.data.error)\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                      }, 5000)\r\n                  })\r\n                  \r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <notification.success message={message}/>\r\n            <notification.error message={errorMessage}/>\r\n            <Filter search={newSearch} handler={handleSearch} />\r\n            <h2>add a new</h2>\r\n            <PersonForm handler={addPerson} newName={newName}\r\n                nameChange={handleNameChange} newNumber={newNumber}\r\n                numberChange={handleNumberChange} />\r\n            <h2>Numbers</h2>\r\n            <Persons persons={persons} filter={newSearch} handleDelete={deletePerson} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}